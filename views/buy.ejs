<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="CBD Produkt Kaufen">
    <meta name="theme-color" content="#667eea">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="CBD Kaufen">
    
    <title><%= title %> | CBD Warenbestand</title>
    
    <!-- CSS -->
    <link rel="stylesheet" href="/css/style.css">
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>üåø</text></svg>">
</head>
<body>
    <div class="container">
        <div class="card">
            <!-- Logo/Branding -->
            <div class="logo">üõí</div>
            
            <!-- Header -->
            <div class="header">
                <h1><%= title %></h1>
                <p>F√ºllen Sie das Formular aus, um ein Produkt zu bestellen</p>
            </div>
            
            <!-- Purchase Form -->
            <form action="/buy" method="POST" id="buyForm" target="hidden_iframe">
                <!-- Name Selection -->
                <div class="form-group">
                    <label for="name" class="form-label">üë§ Name</label>
                    <select id="name" name="name" class="form-control" required>
                        <option value="">-- Name ausw√§hlen --</option>
                        <% nameOptions.forEach(function(nameOption) { %>
                            <option value="<%= nameOption %>"><%= nameOption %></option>
                        <% }); %>
                        <option value="custom">‚úèÔ∏è Anderen Namen eingeben...</option>
                    </select>
                </div>
                
                <!-- Custom Name Input (hidden by default) -->
                <div class="form-group" id="customNameGroup" style="display: none;">
                    <label for="customName" class="form-label">‚úèÔ∏è Eigener Name</label>
                    <input 
                        type="text" 
                        id="customName" 
                        name="customName" 
                        class="form-control" 
                        placeholder="Ihren Namen eingeben..."
                        maxlength="50"
                    >
                </div>
                
                <!-- Product Selection -->
                <div class="form-group">
                    <label for="product" class="form-label">üì¶ Produkt</label>
                    
                    <!-- Google Sheets Button -->
                    <div style="display: flex; gap: 10px; margin-bottom: 10px; align-items: center;">
                        <button type="button" id="loadProductsBtn" class="btn btn-secondary" style="flex: 0 0 auto; padding: 8px 16px; font-size: 0.9rem;">
                            <span id="loadBtnText">üìä Aktuelle Produkte laden</span>
                            <span id="loadBtnSpinner" style="display: none;">
                                <span class="loading"></span> Lade...
                            </span>
                        </button>
                        <small id="productLoadHint" style="color: #718096; font-size: 0.8rem; flex: 1;">
                            L√§dt die neuesten Produkte aus Google Sheets
                        </small>
                    </div>
                    
                    <select id="product" name="product" class="form-control" required>
                        <option value="">-- Produkt ausw√§hlen --</option>
                        <% productOptions.forEach(function(productOption) { %>
                            <option value="<%= productOption %>"><%= productOption %></option>
                        <% }); %>
                    </select>
                    
                    <small id="productHint" style="color: #718096; font-size: 0.8rem; margin-top: 5px; display: block;">
                        Statische Produktliste. Klicken Sie "Aktuelle Produkte laden" f√ºr Google Sheets Daten.
                    </small>
                </div>
                
                <!-- Quantity Input -->
                <div class="form-group">
                    <label for="quantity" class="form-label">üî¢ St√ºckzahl</label>
                    <input 
                        type="number" 
                        id="quantity" 
                        name="quantity" 
                        class="form-control" 
                        placeholder="Anzahl eingeben..."
                        min="1" 
                        max="100" 
                        required
                    >
                    <small style="color: #718096; font-size: 0.8rem; margin-top: 5px; display: block;">
                        Minimum: 1, Maximum: 100
                    </small>
                </div>
                
                <!-- Notes Input (optional) -->
                <div class="form-group">
                    <label for="notes" class="form-label">üìù Notiz (optional)</label>
                    <textarea 
                        id="notes" 
                        name="notes" 
                        class="form-control" 
                        placeholder="Zus√§tzliche Informationen oder W√ºnsche..."
                        rows="3"
                        maxlength="500"
                        style="resize: vertical; min-height: 80px;"
                    ></textarea>
                    <small style="color: #718096; font-size: 0.8rem; margin-top: 5px; display: block;">
                        Optional - z.B. Lieferadresse, besondere W√ºnsche, etc.
                    </small>
                </div>
                
                <!-- Order Summary (appears dynamically) -->
                <div id="orderSummary" class="alert alert-info" style="display: none; margin-bottom: 20px;">
                    <strong>üìã Bestell√ºbersicht:</strong><br>
                    <div id="summaryContent"></div>
                </div>
                
                <!-- Submit Button (moved to bottom) -->
                <button type="submit" class="btn btn-success" id="submitBtn" disabled>
                    <span id="submitText">üõí Kauf best√§tigen</span>
                    <span id="loadingText" style="display: none;">
                        <span class="loading"></span> Wird verarbeitet...
                    </span>
                </button>
            </form>
            
            <!-- Navigation -->
            <div class="nav-buttons">
                <a href="/dashboard" class="btn btn-secondary">
                    ‚¨ÖÔ∏è Zur√ºck zur Auswahl
                </a>
            </div>
            
            <!-- Footer -->
            <div class="text-center mt-4" style="color: #a0aec0; font-size: 0.8rem;">
                üåø CBD Warenbestand Management System
            </div>
        </div>
    </div>
    
    <!-- JavaScript -->
    <script>
        // Custom name handling
        document.getElementById('name').addEventListener('change', function() {
            const customNameGroup = document.getElementById('customNameGroup');
            const customNameInput = document.getElementById('customName');
            
            if (this.value === 'custom') {
                customNameGroup.style.display = 'block';
                customNameInput.required = true;
                customNameInput.focus();
            } else {
                customNameGroup.style.display = 'none';
                customNameInput.required = false;
                customNameInput.value = '';
            }
            updateOrderSummary();
        });
        
        // Order summary update
        function updateOrderSummary() {
            const nameSelect = document.getElementById('name');
            const customName = document.getElementById('customName');
            const product = document.getElementById('product');
            const quantity = document.getElementById('quantity');
            const notes = document.getElementById('notes');
            const summaryDiv = document.getElementById('orderSummary');
            const summaryContent = document.getElementById('summaryContent');
            const submitBtn = document.getElementById('submitBtn');
            
            const selectedName = nameSelect.value === 'custom' ? customName.value : nameSelect.value;
            
            // Show summary if any field has content
            const hasAnyContent = selectedName || product.value || quantity.value || notes.value;
            
            if (hasAnyContent) {
                let summaryHtml = '';
                
                if (selectedName) {
                    summaryHtml += `<strong>üë§ Name:</strong> ${selectedName}<br>`;
                }
                if (product.value) {
                    summaryHtml += `<strong>üì¶ Produkt:</strong> ${product.value}<br>`;
                }
                if (quantity.value) {
                    summaryHtml += `<strong>üî¢ St√ºckzahl:</strong> ${quantity.value}<br>`;
                }
                if (notes.value.trim()) {
                    summaryHtml += `<strong>üìù Notiz:</strong> ${notes.value.trim()}<br>`;
                }
                
                // Add missing fields hint (only for required fields)
                const missingFields = [];
                if (!selectedName) missingFields.push('Name');
                if (!product.value) missingFields.push('Produkt');
                if (!quantity.value) missingFields.push('St√ºckzahl');
                
                if (missingFields.length > 0) {
                    summaryHtml += `<small style="color: #ed8936;"><strong>Noch ben√∂tigt:</strong> ${missingFields.join(', ')}</small>`;
                }
                
                summaryContent.innerHTML = summaryHtml;
                summaryDiv.style.display = 'block';
                
                // Enable submit button only if all required fields are filled
                const allRequiredFieldsFilled = selectedName && product.value && quantity.value;
                submitBtn.disabled = !allRequiredFieldsFilled;
                
                if (allRequiredFieldsFilled) {
                    submitBtn.style.opacity = '1';
                    submitBtn.style.cursor = 'pointer';
                } else {
                    submitBtn.style.opacity = '0.6';
                    submitBtn.style.cursor = 'not-allowed';
                }
            } else {
                summaryDiv.style.display = 'none';
                submitBtn.disabled = true;
                submitBtn.style.opacity = '0.6';
                submitBtn.style.cursor = 'not-allowed';
            }
        }
        
        // Add event listeners for real-time summary updates
        ['name', 'product', 'quantity', 'customName', 'notes'].forEach(id => {
            const element = document.getElementById(id);
            if (element) {
                element.addEventListener('input', updateOrderSummary);
                element.addEventListener('change', updateOrderSummary);
            }
        });
        
        // Google Sheets Produkte laden
        document.getElementById('loadProductsBtn').addEventListener('click', async function() {
            const btn = this;
            const btnText = document.getElementById('loadBtnText');
            const btnSpinner = document.getElementById('loadBtnSpinner');
            const productSelect = document.getElementById('product');
            const productHint = document.getElementById('productHint');
            const productLoadHint = document.getElementById('productLoadHint');
            
            // Button Status √§ndern
            btn.disabled = true;
            btnText.style.display = 'none';
            btnSpinner.style.display = 'inline';
            productLoadHint.textContent = 'Lade Produkte aus Google Sheets...';
            productLoadHint.style.color = '#007bff';
            
            try {
                console.log('üîÑ Lade Produkte von Google Sheets API...');
                const response = await fetch('/api/products');
                
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);
                }
                
                const data = await response.json();
                console.log('‚úÖ Google Sheets API Response:', data);
                
                if (!data.success) {
                    throw new Error(data.error || 'Unbekannter Fehler');
                }
                
                // Aktuelle Auswahl merken
                const currentValue = productSelect.value;
                
                // Produktliste aktualisieren
                productSelect.innerHTML = '<option value="">-- Produkt ausw√§hlen --</option>';
                
                data.products.forEach(product => {
                    const option = document.createElement('option');
                    option.value = product;
                    option.textContent = product;
                    productSelect.appendChild(option);
                });
                
                // Alte Auswahl wiederherstellen, falls noch vorhanden
                if (currentValue && data.products.includes(currentValue)) {
                    productSelect.value = currentValue;
                }
                
                // Erfolg anzeigen
                const cacheInfo = data.cached ? `(Cache: ${data.cacheAge}s alt)` : '(frisch geladen)';
                productHint.style.color = '#38a169';
                productHint.innerHTML = `‚úÖ ${data.products.length} Produkte aus Google Sheets geladen ${cacheInfo}<br><small style="color: #718096;">Letzte Aktualisierung: ${new Date().toLocaleTimeString()}</small>`;
                
                productLoadHint.textContent = `‚úÖ ${data.products.length} Produkte geladen`;
                productLoadHint.style.color = '#38a169';
                
                // Button erfolgreich
                btnText.textContent = '‚úÖ Erfolgreich geladen';
                btnText.style.color = '#38a169';
                
                // Summary aktualisieren falls Produktauswahl aktiv war
                updateOrderSummary();
                
            } catch (error) {
                console.error('‚ùå Fehler beim Laden der Produkte:', error);
                
                // Fehler anzeigen
                productHint.style.color = '#e53e3e';
                productHint.innerHTML = `‚ùå Fehler beim Laden: ${error.message}<br><small style="color: #718096;">Verwenden Sie die vordefinierten Produkte oder versuchen Sie es erneut.</small>`;
                
                productLoadHint.textContent = 'Fehler beim Laden';
                productLoadHint.style.color = '#e53e3e';
                
                // Button Fehler
                btnText.textContent = '‚ùå Fehler beim Laden';
                btnText.style.color = '#e53e3e';
                
            } finally {
                // Button zur√ºcksetzen nach 3 Sekunden
                setTimeout(() => {
                    btn.disabled = false;
                    btnText.style.display = 'inline';
                    btnSpinner.style.display = 'none';
                    btnText.textContent = 'üìä Aktuelle Produkte laden';
                    btnText.style.color = '';
                    
                    // Hints zur√ºcksetzen nach 10 Sekunden
                    setTimeout(() => {
                        if (!productHint.textContent.includes('‚úÖ')) {
                            productHint.style.color = '#718096';
                            productHint.textContent = 'Statische Produktliste. Klicken Sie "Aktuelle Produkte laden" f√ºr Google Sheets Daten.';
                        }
                        productLoadHint.textContent = 'L√§dt die neuesten Produkte aus Google Sheets';
                        productLoadHint.style.color = '#718096';
                    }, 7000);
                }, 3000);
            }
        });
        
        // Form submission handling
        document.getElementById('buyForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const form = this;
            
            // Validierung vor dem Absenden
            const nameSelect = document.getElementById('name');
            const customName = document.getElementById('customName');
            const product = document.getElementById('product');
            const quantity = document.getElementById('quantity');
            
            const selectedName = nameSelect.value === 'custom' ? customName.value : nameSelect.value;
            
            if (!selectedName || !product.value || !quantity.value) {
                alert('Bitte f√ºllen Sie alle Felder aus.');
                return;
            }
            
            // Modal √∂ffnen
            showWaitingModal();
            
            // JSON-Daten f√ºr Kauf vorbereiten
            const purchaseData = {
                name: selectedName,
                product: product.value,
                quantity: quantity.value,
                notes: document.getElementById('notes').value || null
            };
            
            console.log('Sending purchase data:', purchaseData);
            
            fetch('/buy', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(purchaseData)
            })
            .then(response => {
                console.log('Response status:', response.status);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Response data:', data);
                if (data.success) {
                    // Erfolg anzeigen mit n8n Response
                    document.getElementById('spinner').style.display = 'none';
                    document.getElementById('result').style.display = 'block';
                    
                    let resultHtml = `<div style="text-align: center; color: #28a745; font-size: 18px; margin-bottom: 20px;">
                        <strong>‚úÖ ${data.message}</strong>
                    </div>`;
                    
                    resultHtml += '<div style="background: #e8f5e8; padding: 15px; border-radius: 8px; margin-bottom: 15px;">';
                    resultHtml += '<h4 style="margin: 0 0 10px 0; color: #155724;">üì¶ Bestelldetails:</h4>';
                    resultHtml += `<p><strong>Name:</strong> ${data.orderDetails.name}</p>`;
                    resultHtml += `<p><strong>Produkt:</strong> ${data.orderDetails.product}</p>`;
                    resultHtml += `<p><strong>St√ºckzahl:</strong> ${data.orderDetails.quantity}</p>`;
                    if (data.orderDetails.notes) {
                        resultHtml += `<p><strong>Notiz:</strong> ${data.orderDetails.notes}</p>`;
                    }
                    resultHtml += '</div>';
                    
                    if (data.n8nResponse && Object.keys(data.n8nResponse).length > 0) {
                        resultHtml += '<div style="background: #f8f9fa; padding: 15px; border-radius: 8px;">';
                        resultHtml += '<h4 style="margin: 0 0 10px 0; color: #495057;">üîÑ System-Response:</h4>';
                        if (data.n8nResponse.Lagerbestand !== undefined) {
                            resultHtml += `<p><strong>Neuer Lagerbestand:</strong> ${data.n8nResponse.Lagerbestand}</p>`;
                        }
                        if (data.n8nResponse.Preis !== undefined) {
                            resultHtml += `<p><strong>Preis:</strong> ${data.n8nResponse.Preis}‚Ç¨</p>`;
                        }
                        if (data.n8nResponse.Datum) {
                            resultHtml += `<p><strong>Datum:</strong> ${new Date(data.n8nResponse.Datum).toLocaleString('de-DE')}</p>`;
                        }
                        resultHtml += '</div>';
                    }
                    
                    resultHtml += '<div style="margin-top: 20px; text-align: center;">';
                    resultHtml += '<button onclick="closeModal()" style="background: #28a745; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">OK</button>';
                    resultHtml += '</div>';
                    
                    document.getElementById('result').innerHTML = resultHtml;
                } else {
                    hideWaitingModal();
                    alert(data.error || 'Es gab einen Fehler beim Verarbeiten des Kaufs.');
                }
            })
            .catch(error => {
                console.error('Fehler Details:', error);
                hideWaitingModal();
                alert('Es gab einen Fehler beim Verarbeiten des Kaufs: ' + error.message);
            });
        });
        
        function showWaitingModal() {
            const modal = document.getElementById('waitingModal');
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }
        
        function hideWaitingModal() {
            const modal = document.getElementById('waitingModal');
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
            document.getElementById('result').style.display = 'none';
            document.getElementById('spinner').style.display = 'block';
        }
        
        // Modal schlie√üen
        function closeModal() {
            hideWaitingModal();
        }
        
        // Modal schlie√üen bei Klick au√üerhalb
        window.onclick = function(event) {
            const modal = document.getElementById('waitingModal');
            if (event.target === modal) {
                hideWaitingModal();
            }
        }
    </script>
    
    <!-- Waiting Modal -->
    <div id="waitingModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Bitte warten, Ihre Bestellung wird verarbeitet...</h2>
            <div id="spinner" class="spinner"></div>
            <div id="result" class="result" style="display:none;"></div>
        </div>
    </div>
    
    <style>
        .modal {
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 30px;
            border-radius: 10px;
            width: 80%;
            max-width: 500px;
            text-align: center;
            position: relative;
        }
        .close {
            position: absolute;
            right: 15px;
            top: 10px;
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .close:hover {
            color: #000;
        }
        .spinner {
            margin: 40px auto;
            border: 8px solid #eee;
            border-top: 8px solid #6c63ff;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            100% { transform: rotate(360deg); }
        }
        .result {
            margin-top: 20px;
            background: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
            text-align: left;
        }
    </style>
    
    <iframe name="hidden_iframe" id="hidden_iframe" style="display:none;"></iframe>
</body>
</html> 